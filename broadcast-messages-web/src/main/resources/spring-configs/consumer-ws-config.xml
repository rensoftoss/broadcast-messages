<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:int="http://www.springframework.org/schema/integration"
       xmlns:task="http://www.springframework.org/schema/task"
       xmlns:int-groovy="http://www.springframework.org/schema/integration/groovy"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
	   http://www.springframework.org/schema/integration http://www.springframework.org/schema/integration/spring-integration.xsd
	   http://www.springframework.org/schema/integration/groovy	http://www.springframework.org/schema/integration/groovy/spring-integration-groovy.xsd
	   http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task.xsd">

    <!--Send message through websocket to connected clients-->

    <int:channel id="queueToWebsocketChannel">
        <int:dispatcher task-executor="wsExecutor"/>
    </int:channel>

    <task:executor id="wsExecutor" pool-size="0-10" keep-alive="120" queue-capacity="500"/>

    <int:splitter input-channel="queueToWebsocketChannel" output-channel="sendMessageChannel" apply-sequence="false">
        <int-groovy:script>
            import org.springframework.integration.support.MessageBuilder
            import org.springframework.messaging.simp.stomp.StompHeaderAccessor

            def messages = payload.get("messages").collect { it.value }.flatten();

            webSocketSessionStore.collect {
                def sessionId = it.key;
                def subscriptionId = webSocketSubscriptionStore.get(it.key);
                messages.collect {
                    MessageBuilder.withPayload(it)
                            .copyHeaders(headers)
                            .setHeader(StompHeaderAccessor.SESSION_ID_HEADER, sessionId)
                            .setHeader(StompHeaderAccessor.DESTINATION_HEADER, "/topic/messages")
                            .setHeader(StompHeaderAccessor.SUBSCRIPTION_ID_HEADER, subscriptionId)
                            .build()
                }
            }.flatten();
        </int-groovy:script>
    </int:splitter>

</beans>